What happens when you initialize a repository? Why do you need to do it?

    When I initialize a repository git creates a hidden directory to track the files of the work.

How is the staging area different from the working directory and the repository? What value do you think it offers?

    In the working directory lives the files of the project, work, etc.
    In the repository lives the files that have already commited.
    In the staging area are the cache of the files to be commited.

How can you use the staging area to make sure you have one commit per logical change?

    The staging area can be used to make sure that the commits are those that I want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

    Branches are helpful when I want to experiment new features that I'm not sure if those changes will work.

How do the diagrams help you visualize the branch structure?

    The diagrams helps to ordering the branches in my mind.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

    Merging two branches result in the combination of the two branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

    With manual merging the user has the control of the changes. Automatic merging requires advanced intelligent techniques that git does not have.


